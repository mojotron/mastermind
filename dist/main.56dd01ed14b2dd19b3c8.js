(()=>{"use strict";const e=["blue","green","yellow","red","orange","purple","brown","black"],t={easy:{codeLength:3,colorChoice:4},normal:{codeLength:4,colorChoice:6},hard:{codeLength:5,colorChoice:8}},n={difficulty:"normal",turn:0,timeStart:null,time:null,secretCode:[],userCode:[],highScores:{easy:[],normal:[],hard:[]}},r=function(e){n.highScores[n.difficulty]=n.highScores[n.difficulty].slice(0,e)};!function(){const e=localStorage.getItem("highscores");e&&(n.highScores=JSON.parse(e))}();const o=function(e){return e.sort(((e,t)=>e.moves>t.moves?1:e.moves<t.moves?-1:e.time>t.time?1:e.time<t.time?-1:void 0))},c=new class{#e=[...e];#t(e){return Math.floor(Math.random()*e)}#n(e){return this.#e[this.#t(e)]}#r(e,t){return Array.from({length:e},(()=>this.#n(t)))}createCode(e="normal"){const{codeLength:n,colorChoice:r}=t[e];return this.#r(n,r)}},s=new class{#o=document.querySelector(".game-board-display");createBoard(e){this.#o.innerHTML="";for(let t=0;t<10;t++){const n=`\n        <div class="game-turn" data-turn="${t}">\n          <div class="game-turn-pegs">\n            ${this.createPegs("peg",e)}\n          </div>\n          <div class="game-turn-flags">\n            ${this.createPegs("flag",e)}\n          </div>\n        </div>\n      `;this.#o.insertAdjacentHTML("afterbegin",n)}}createPegs(e,n){let r="";for(let o=0;o<t[n].codeLength;o++)r+=`\n        <div \n          class="color-choice color-${e}" \n          data-${e}="${o}">\n        </div>`;return r}},a=new class{#o=document.querySelector(".color-picker-display");addHandlerControlClick(e){this.#o.querySelectorAll("button.color-choice").forEach((t=>{t.addEventListener("click",e.bind(this,t))}))}removeButtons(){this.#o.innerHTML=""}createControls(n){this.#o.innerHTML="";let r="";for(let o=0;o<t[n].colorChoice;o++)r+=`\n      <button \n        class="color-choice" \n        data-color-pick="${e[o]}" \n        style="background-color:var(--peg-${e[o]});">\n      </button>\n    `;r+='\n    <button \n      class="color-choice control-btn" \n      data-control="undo">&#9100; \n    </button>\n    <button \n      class="color-choice control-btn" \n      data-control="submit">&#9094;\n    </button>\n  ',this.#o.insertAdjacentHTML("beforeend",r)}},l=new class{renderPegs(e,t){const n=document.querySelector(`[data-turn="${e}"]`);n.querySelectorAll("[data-peg]").forEach((e=>{e.style.backgroundColor="inherit"})),t.forEach(((e,t)=>{n.querySelector(`[data-peg="${t}"]`).style.backgroundColor=`var(--peg-${e})`}))}renderFlags(e,t){const n=document.querySelector(`[data-turn="${e}"]`);t.forEach(((e,t)=>{n.querySelector(`[data-flag="${t}"]`).style.backgroundColor=`var(--flag-${e})`}))}renderSecretCode(e){const t=document.querySelector(".alert");e.forEach(((e,n)=>{t.querySelector(`[data-secret="${n}"]`).style.backgroundColor=`var(--peg-${e})`}))}},i=new class{#c=document.querySelector(".btn-new-game");newGameDifficulty(e){this.#c.addEventListener("click",(function(t){t.preventDefault();const n=document.querySelector("select").value;e(n)}))}},u=new class{#s="game-turn-active";#a="game-turn-miss";updateTurnStyle(e,t=!0){document.querySelector(`[data-turn="${e}"]`).classList.add(`${t?this.#s:this.#a}`)}},d=new class{#l=document.querySelector(".game-mode");#o=document.querySelector(".high-score-container");updateHighScores(e,t){var n;this.#l.textContent=(n=e)[0].toUpperCase()+n.slice(1),this.#o.innerHTML="",t.forEach(((e,t)=>{const n=`\n        <li class="high-score-item">\n          <span>${t+1}</span>\n          <span class="high-score-username">${e.userName}</span>\n          <span class="high-score-moves">${e.moves} moves</span> \n          <span class="high-score-time">${function(e){const t=`${Math.floor(e/1e3%60)}`.padStart(2,0),n=`${Math.floor(e/1e3/60%60)}`.padStart(2,0),r=`${Math.floor(e/1e3/3600%24)}`.padStart(2,0);return`${"00"==r?"":`${r}:`}${n}:${t}`}(+e.time)}</span>\n        </li>\n      `;this.#o.insertAdjacentHTML("beforeend",n)}))}},h=new class{#o=document.querySelector(".alert");#i=document.querySelector(".overlay");winAlert(){this.#o.innerHTML="",this.#o.insertAdjacentHTML("afterbegin",'\n      <p class="message">You broke the code! ðŸ¥³</p>\n      <form>\n        <label for="user-name">Enter Name</label>\n        <input type="text" id="user-name" />\n        <button class="btn-submit-highscore">Submit</button>\n      </form>\n    '),this.toggleAlert()}addHandlerSubmit(e){document.querySelector(".btn-submit-highscore").addEventListener("click",(function(t){t.preventDefault();const n=document.querySelector("#user-name").value||"Unknown";e(n)}))}loseAlert(e,t){this.#o.innerHTML="";const n=`\n      <button class="btn-close-alert">X</button>\n      <p class="message">Sorry! You didn't break the code!</p>\n      <p class="message">Secret code was:</p>\n      <div class="secret-container">\n      ${s.createPegs("secret",t)}\n      </div>\n      \n    `;this.#o.insertAdjacentHTML("afterbegin",n),this.toggleAlert(),l.renderSecretCode(e)}closeAlert(){this.#o.querySelector(".btn-close-alert").addEventListener("click",function(){this.toggleAlert()}.bind(this))}toggleAlert(){this.#o.classList.toggle("hidden"),this.#i.classList.toggle("hidden")}};i.newGameDifficulty((function(e){var t;!function(e){n.difficulty=e}(e),n.userCode=[],n.turn=0,n.timeStart=new Date,t=c.createCode(n.difficulty),n.secretCode=t,s.createBoard(n.difficulty),u.updateTurnStyle(n.turn),a.createControls(n.difficulty),a.addHandlerControlClick(m),d.updateHighScores(n.difficulty,n.highScores[n.difficulty])}));const m=function(e){if("submit"===e.dataset?.control){const e=function(e,r){let o=0,c=0;const s=Array.from({length:t[n.difficulty].codeLength},(()=>null));for(const[t,n]of e.entries())n===r[t]&&(s[t]=n,o++);for(const[t,n]of e.entries())s.filter((e=>e===n)).length!==r.filter((e=>e===n)).length&&(s[t]||r.includes(n)&&(s[t]=n,c++));return[o,c]}(n.userCode,n.secretCode);return void g(e)}if("undo"===e.dataset?.control){if(n.userCode.length<1)return;return n.userCode.pop(),void l.renderPegs(n.turn,n.userCode)}const r=e.dataset.colorPick;n.userCode.length<t[n.difficulty].codeLength&&(n.userCode.push(r),l.renderPegs(n.turn,n.userCode))},g=function(e){var r,o;return l.renderFlags(n.turn,(r=e[0],o=e[1],("red ".repeat(r)+"white ".repeat(o)).trim().split(" "))),e[0]===t[n.difficulty].codeLength?(n.time=new Date-n.timeStart,a.removeButtons(),h.winAlert(),void h.addHandlerSubmit(f)):(u.updateTurnStyle(n.turn,!1),n.turn++,n.userCode=[],10===n.turn?(a.removeButtons(),h.loseAlert(n.secretCode,n.difficulty),void h.closeAlert()):void u.updateTurnStyle(n.turn))},f=function(e){(function(e,t,c){n.highScores[n.difficulty].push({userName:e,moves:t,time:c}),o(n.highScores[n.difficulty]),r(15),localStorage.setItem("highscores",JSON.stringify(n.highScores))})(e,n.turn+1,n.time),d.updateHighScores(n.difficulty,n.highScores[n.difficulty]),h.toggleAlert()}})();